// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid())
  name        String
  avatar      String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  completions Completion[]
  activities  Activity[]
  communities Community[]
}

model Community {
  id              String       @id @default(cuid())
  name            String
  avatar          String
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  currentActivity Activity?    @relation("CurrentActivity")
  activities      Activity[]
  exercises       Exercise[]
  completions     Completion[]
  users           User[]
}

model Exercise {
  id          String       @id @default(cuid())
  name        String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  communities Community[]
  activities  Activity[]
  completions Completion[]
}

model Completion {
  id          String     @id @default(cuid())
  userId      String
  activityId  String
  communityId String
  exerciseId  String
  status      Int        @default(0)
  reps        Int        @default(0)
  completedAt DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  user        User       @relation(fields: [userId], references: [id])
  activity    Activity   @relation(fields: [activityId], references: [id])
  community   Community? @relation(fields: [communityId], references: [id])
  exercise    Exercise   @relation(fields: [exerciseId], references: [id])
}

model Activity {
  id          String       @id @default(cuid())
  communityId String       @unique
  exerciseId  String
  users       User[]
  status      Int          @default(0)
  data        Json
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  community   Community    @relation("CurrentActivity", fields: [communityId], references: [id])
  exercise    Exercise     @relation(fields: [exerciseId], references: [id])
  communities Community[]
  completions Completion[]
}
