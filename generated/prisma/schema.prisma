// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               String       @id @default(cuid())
  name             String
  avatar           String
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  completions      Completion[]
  communities      Community[]
  ownedCommunities Community[]  @relation("OwnedCommunities")
}

model Community {
  id              String     @id @default(cuid())
  name            String
  avatar          String
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  currentActivity Activity?  @relation("CurrentActivity")
  activities      Activity[] @relation("Community")
  exercises       Exercise[]
  ownerId         String
  owner           User?      @relation("OwnedCommunities", fields: [ownerId], references: [id])
  users           User[]
}

model Exercise {
  id          String      @id @default(cuid())
  name        String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  communities Community[]
  activities  Activity[]
}

model Completion {
  id         String   @id @default(cuid())
  userId     String
  activityId String
  reps       Int      @default(0)
  reaction   Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  activity   Activity @relation(fields: [activityId], references: [id])
}

model Activity {
  id                 String       @id @default(cuid())
  communityId        String       @unique
  currentCommunityId String?      @unique
  exerciseId         String
  status             Int          @default(0)
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  currentCommunity   Community?   @relation("CurrentActivity", fields: [currentCommunityId], references: [id], map: "CurrentActivity_communityId_fkey")
  exercise           Exercise     @relation(fields: [exerciseId], references: [id])
  community          Community    @relation("Community", fields: [communityId], references: [id], map: "Community_communityId_fkey")
  completions        Completion[]
}
